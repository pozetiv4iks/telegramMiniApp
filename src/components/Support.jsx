import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import { WebApp } from '@twa-dev/sdk'

const Support = () => {
  const navigate = useNavigate()
  const [message, setMessage] = useState('')
  const [selectedCategory, setSelectedCategory] = useState('general')

  const categories = [
    { key: 'general', label: '–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã', icon: '‚ùì' },
    { key: 'technical', label: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', icon: 'üîß' },
    { key: 'billing', label: '–ë–∏–ª–ª–∏–Ω–≥', icon: 'üí≥' },
    { key: 'security', label: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', icon: 'üîí' }
  ]

  const faqItems = [
    {
      question: '–ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç—É?',
      answer: '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç—É —á–µ—Ä–µ–∑ –±–∞–Ω–∫–æ–º–∞—Ç, –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞ –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å –¥—Ä—É–≥–æ–π –∫–∞—Ä—Ç—ã.'
    },
    {
      question: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?',
      answer: '–î–∞, –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è –∑–∞—â–∏—Ç—ã –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö.'
    },
    {
      question: '–ö–∞–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É?',
      answer: '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ú–æ–∏ –∫–∞—Ä—Ç—ã", –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ä—Ç—É –∏ –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å".'
    }
  ]

  const handleBack = () => {
    navigate(-1)
  }

  const handleSendMessage = () => {
    if (message.trim()) {
      try {
        WebApp.HapticFeedback.notificationOccurred('success')
        WebApp.showAlert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.')
        setMessage('')
      } catch (error) {
        console.log('WebApp methods not available')
        alert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.')
        setMessage('')
      }
    }
  }

  const handleCategorySelect = (category) => {
    setSelectedCategory(category)
    try {
      WebApp.HapticFeedback.impactOccurred('light')
    } catch (error) {
      console.log('Haptic feedback not available')
    }
  }

  return (
    <div className="min-h-screen bg-gray-900">
      {/* Header */}
      <div className="bg-gray-800 shadow-sm border-b border-gray-700">
        <div className="px-4 py-6">
          <div className="flex items-center space-x-3">
            <button 
              onClick={handleBack}
              className="w-8 h-8 bg-gray-700 rounded-full flex items-center justify-center"
            >
              <span className="text-gray-300">‚Üê</span>
            </button>
            <div>
              <h1 className="text-2xl font-bold text-white">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h1>
              <p className="text-gray-300">–ü–æ–º–æ—â—å –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã</p>
            </div>
          </div>
        </div>
      </div>

      <div className="px-4 py-6 space-y-6">
        {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
        <div className="bg-gray-800 rounded-xl p-6 border border-gray-700">
          <h3 className="text-lg font-semibold text-white mb-4">–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</h3>
          <div className="space-y-4">
            <div className="flex items-center space-x-3">
              <span className="text-2xl">üìû</span>
              <div>
                <div className="text-white font-medium">–¢–µ–ª–µ—Ñ–æ–Ω</div>
                <div className="text-gray-400">+7 (800) 123-45-67</div>
              </div>
            </div>
            <div className="flex items-center space-x-3">
              <span className="text-2xl">‚úâÔ∏è</span>
              <div>
                <div className="text-white font-medium">Email</div>
                <div className="text-gray-400">support@fintechwallet.com</div>
              </div>
            </div>
            <div className="flex items-center space-x-3">
              <span className="text-2xl">üí¨</span>
              <div>
                <div className="text-white font-medium">Telegram</div>
                <div className="text-gray-400">@fintechwallet_support</div>
              </div>
            </div>
          </div>
        </div>

        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ */}
        <div className="bg-gray-800 rounded-xl p-6 border border-gray-700">
          <h3 className="text-lg font-semibold text-white mb-4">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</h3>
          <div className="grid grid-cols-2 gap-3">
            {categories.map((category) => (
              <button
                key={category.key}
                onClick={() => handleCategorySelect(category.key)}
                className={`p-4 rounded-lg border transition-all duration-200 ${
                  selectedCategory === category.key
                    ? 'border-blue-500 bg-blue-500 bg-opacity-20'
                    : 'border-gray-600 bg-gray-700 hover:border-gray-500'
                }`}
              >
                <div className="text-2xl mb-2">{category.icon}</div>
                <div className="text-white text-sm font-medium">{category.label}</div>
              </button>
            ))}
          </div>
        </div>

        {/* –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ */}
        <div className="bg-gray-800 rounded-xl p-6 border border-gray-700">
          <h3 className="text-lg font-semibold text-white mb-4">–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</h3>
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-300 mb-2">
                –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
              </label>
              <textarea
                value={message}
                onChange={(e) => setMessage(e.target.value)}
                placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å..."
                className="w-full p-3 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 resize-none h-24"
              />
            </div>
            <button
              onClick={handleSendMessage}
              disabled={!message.trim()}
              className="w-full bg-blue-500 text-white py-3 rounded-lg font-medium disabled:bg-gray-600 disabled:cursor-not-allowed hover:bg-blue-600 transition-colors duration-200"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            </button>
          </div>
        </div>

        {/* FAQ */}
        <div className="bg-gray-800 rounded-xl p-6 border border-gray-700">
          <h3 className="text-lg font-semibold text-white mb-4">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
          <div className="space-y-4">
            {faqItems.map((item, index) => (
              <div key={index} className="border-b border-gray-700 pb-4 last:border-b-0">
                <div className="text-white font-medium mb-2">{item.question}</div>
                <div className="text-gray-400 text-sm">{item.answer}</div>
              </div>
            ))}
          </div>
        </div>

        {/* –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã */}
        <div className="bg-gray-800 rounded-xl p-6 border border-gray-700">
          <h3 className="text-lg font-semibold text-white mb-4">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</h3>
          <div className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-300">–ü–Ω-–ü—Ç</span>
              <span className="text-white">9:00 - 21:00</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-300">–°–±-–í—Å</span>
              <span className="text-white">10:00 - 18:00</span>
            </div>
            <div className="text-sm text-gray-400 mt-3">
              –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 2-4 —á–∞—Å–∞
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Support
