import React, { useState } from 'react'
import { WebApp } from '@twa-dev/sdk'

const Transactions = () => {
  const [filter, setFilter] = useState('all')
  
  const transactions = [
    { id: 1, type: 'income', amount: 2500, description: '–ó–∞—Ä–ø–ª–∞—Ç–∞', date: '2024-01-15', time: '09:00', icon: 'üí∞', category: '–î–æ—Ö–æ–¥—ã' },
    { id: 2, type: 'expense', amount: -150, description: '–ü—Ä–æ–¥—É–∫—Ç—ã –≤ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–µ', date: '2024-01-14', time: '18:30', icon: 'üõí', category: '–ü—Ä–æ–¥—É–∫—Ç—ã' },
    { id: 3, type: 'expense', amount: -89, description: '–ú–µ—Ç—Ä–æ', date: '2024-01-13', time: '08:15', icon: 'üöå', category: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç' },
    { id: 4, type: 'income', amount: 500, description: '–ë–æ–Ω—É—Å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', date: '2024-01-12', time: '12:00', icon: 'üéÅ', category: '–ë–æ–Ω—É—Å—ã' },
    { id: 5, type: 'expense', amount: -2500, description: '–ê—Ä–µ–Ω–¥–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã', date: '2024-01-10', time: '10:00', icon: 'üè†', category: '–ñ–∏–ª—å–µ' },
    { id: 6, type: 'expense', amount: -120, description: '–ö–∞—Ñ–µ', date: '2024-01-09', time: '19:45', icon: '‚òï', category: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è' },
    { id: 7, type: 'income', amount: 800, description: '–§—Ä–∏–ª–∞–Ω—Å', date: '2024-01-08', time: '16:20', icon: 'üíª', category: '–î–æ—Ö–æ–¥—ã' },
    { id: 8, type: 'expense', amount: -45, description: '–¢–∞–∫—Å–∏', date: '2024-01-07', time: '22:10', icon: 'üöï', category: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç' },
  ]

  const filteredTransactions = filter === 'all' 
    ? transactions 
    : transactions.filter(t => t.type === filter)

  const getTotalAmount = (type) => {
    return transactions
      .filter(t => t.type === type)
      .reduce((sum, t) => sum + Math.abs(t.amount), 0)
  }

  const handleTransactionClick = (transaction) => {
    WebApp.HapticFeedback.impactOccurred('light')
    WebApp.showAlert(`–û–ø–µ—Ä–∞—Ü–∏—è: ${transaction.description}\n–°—É–º–º–∞: ${transaction.amount} ‚ÇΩ`)
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b border-gray-100">
        <div className="px-4 py-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-gray-900">–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h1>
              <p className="text-gray-600">–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</p>
            </div>
            <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
              <span className="text-white text-xl">üìä</span>
            </div>
          </div>
        </div>
      </div>

      {/* Summary Cards */}
      <div className="px-4 py-6">
        <div className="grid grid-cols-2 gap-4">
          <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">–î–æ—Ö–æ–¥—ã</p>
                <p className="text-xl font-bold text-green-600">
                  +{getTotalAmount('income').toLocaleString('ru-RU')} ‚ÇΩ
                </p>
              </div>
              <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                <span className="text-green-600 text-lg">üìà</span>
              </div>
            </div>
          </div>
          
          <div className="bg-white rounded-xl p-4 shadow-sm border border-gray-100">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">–†–∞—Å—Ö–æ–¥—ã</p>
                <p className="text-xl font-bold text-red-600">
                  -{getTotalAmount('expense').toLocaleString('ru-RU')} ‚ÇΩ
                </p>
              </div>
              <div className="w-10 h-10 bg-red-100 rounded-full flex items-center justify-center">
                <span className="text-red-600 text-lg">üìâ</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Filter Tabs */}
      <div className="px-4 mb-4">
        <div className="flex space-x-2 bg-gray-100 rounded-lg p-1">
          {[
            { key: 'all', label: '–í—Å–µ', icon: 'üìã' },
            { key: 'income', label: '–î–æ—Ö–æ–¥—ã', icon: 'üí∞' },
            { key: 'expense', label: '–†–∞—Å—Ö–æ–¥—ã', icon: 'üí∏' }
          ].map((tab) => (
            <button
              key={tab.key}
              onClick={() => setFilter(tab.key)}
              className={`flex-1 flex items-center justify-center space-x-2 py-2 px-4 rounded-md transition-all duration-200 ${
                filter === tab.key
                  ? 'bg-white shadow-sm text-blue-600'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              <span>{tab.icon}</span>
              <span className="font-medium">{tab.label}</span>
            </button>
          ))}
        </div>
      </div>

      {/* Transactions List */}
      <div className="px-4">
        <div className="space-y-3">
          {filteredTransactions.map((transaction) => (
            <div 
              key={transaction.id} 
              onClick={() => handleTransactionClick(transaction)}
              className="bg-white rounded-xl p-4 shadow-sm border border-gray-100 active:bg-gray-50 transition-colors duration-150"
            >
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className={`w-12 h-12 rounded-full flex items-center justify-center ${
                    transaction.type === 'income' ? 'bg-green-100' : 'bg-red-100'
                  }`}>
                    <span className="text-xl">{transaction.icon}</span>
                  </div>
                  <div>
                    <div className="font-medium text-gray-900">{transaction.description}</div>
                    <div className="text-sm text-gray-500">{transaction.category}</div>
                    <div className="text-xs text-gray-400">{transaction.date} –≤ {transaction.time}</div>
                  </div>
                </div>
                <div className="text-right">
                  <div className={`font-bold text-lg ${
                    transaction.type === 'income' ? 'text-green-600' : 'text-red-600'
                  }`}>
                    {transaction.type === 'income' ? '+' : ''}{transaction.amount.toLocaleString('ru-RU')} ‚ÇΩ
                  </div>
                  <div className={`text-xs ${
                    transaction.type === 'income' ? 'text-green-500' : 'text-red-500'
                  }`}>
                    {transaction.type === 'income' ? '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ' : '–°–ø–∏—Å–∞–Ω–∏–µ'}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Bottom Spacing */}
      <div className="h-20"></div>
    </div>
  )
}

export default Transactions
